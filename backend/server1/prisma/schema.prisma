// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
}

enum GroupType {
  Chanel
  DirectMessage
}

model User {
  userId                      Int     @id @default(autoincrement())
  name                        String  
  email                       String  @unique
  phone                       String?
  address                     String?
  dateOfBirth                 String?
  password                    String
  gender                      Gender  @default(Male)
  avatar                      String?
  friendRequestSendUser       FriendRequest[] @relation("sendUser")
  friendRequestReceiveUser    FriendRequest[] @relation("receiveUser")
  friendUser                  Friend[]        @relation("user")
  friendFriend                Friend[]        @relation("friend")
  groupAdmin                  GroupAdmin[]
  groupUser                   GroupUser[]
}

model Group {
  groupId               Int     @id @default(autoincrement())
  avatar                String?
  name                  String   
  desc                  String?
  type                  GroupType @default(Chanel)
  groupAdmin            GroupAdmin[]    @relation("group")
  groupUser             GroupUser[]     @relation("group")
 
}

model GroupAdmin {
  groupAdminId          Int     @id @default(autoincrement())
  group                 Group   @relation("group", fields: [groupId], references: [groupId], onDelete: Cascade)
  groupId               Int
  user                  User    @relation(fields: [userId], references: [userId])
  userId                Int     
}

model GroupUser {
  groupUserId           Int     @id @default(autoincrement())
  group                 Group   @relation("group", fields: [groupId], references: [groupId], onDelete: Cascade)
  groupId               Int
  user                  User    @relation(fields: [userId], references: [userId])
  userId                Int     
}

model Friend {
  friendRecordId        Int      @id @default(autoincrement())
  user                  User     @relation("user", fields: [userId], references: [userId])
  userId                Int
  friend                User     @relation("friend", fields: [friendId], references: [userId])
  friendId              Int
}

model FriendRequest {
  friendRequestId       Int     @id @default(autoincrement())
  sendUser              User    @relation("sendUser", fields: [sendUserId], references: [userId])
  sendUserId            Int
  receiveUser           User    @relation("receiveUser", fields: [receiveUserId], references: [userId])
  receiveUserId         Int
}











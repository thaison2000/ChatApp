version: '3.7'

services:

  redis:
    image: redis:5-alpine
    container_name: redis
    ports:
      - '6379:6379'
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=chatapp
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes

  mongo:
    image: mongo:4.4
    container_name: mongo
    ports:
      - 27017:27017
    restart: unless-stopped

  server1:
    image: server1
    container_name: server1-container
    depends_on:
      - redis
      - mysql
    build: ./backend/server1
    volumes:
      - ./server1/src/

    ports:
      - 3001:3001

    command: npm run dev

  server2:
    image: server2
    container_name: server2-container
    depends_on:
      - mongo
      - redis
    build: ./backend/server2
    volumes:
      - ./server2/src/
    ports:
      - 3002:3002

    command: npm run dev

  server3:
    image: server3
    container_name: server3-container
    build: ./backend/server3
    volumes:
      - ./server3/src/
    ports:
      - 3003:3003

    command: npm start

  frontend:
    image: frontend
    container_name: frontend-container
    build: ./frontend
    volumes:
      - ./app/src
    ports:
      - 3000:3000

    command: npm start
